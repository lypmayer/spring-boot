/*
 * This file is generated by jOOQ.
*/
package org.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.db.Indexes;
import org.jooq.db.Keys;
import org.jooq.db.Selecao;
import org.jooq.db.tables.records.EnTaskRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EnTask extends TableImpl<EnTaskRecord> {

    private static final long serialVersionUID = -412977790;

    /**
     * The reference instance of <code>selecao.en_task</code>
     */
    public static final EnTask EN_TASK = new EnTask();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EnTaskRecord> getRecordType() {
        return EnTaskRecord.class;
    }

    /**
     * The column <code>selecao.en_task.seq_task</code>.
     */
    public final TableField<EnTaskRecord, Long> SEQ_TASK = createField("seq_task", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>selecao.en_task.title</code>.
     */
    public final TableField<EnTaskRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>selecao.en_task.description</code>.
     */
    public final TableField<EnTaskRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(500).nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    /**
     * The column <code>selecao.en_task.seq_en_status</code>.
     */
    public final TableField<EnTaskRecord, Long> SEQ_EN_STATUS = createField("seq_en_status", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * Create a <code>selecao.en_task</code> table reference
     */
    public EnTask() {
        this(DSL.name("en_task"), null);
    }

    /**
     * Create an aliased <code>selecao.en_task</code> table reference
     */
    public EnTask(String alias) {
        this(DSL.name(alias), EN_TASK);
    }

    /**
     * Create an aliased <code>selecao.en_task</code> table reference
     */
    public EnTask(Name alias) {
        this(alias, EN_TASK);
    }

    private EnTask(Name alias, Table<EnTaskRecord> aliased) {
        this(alias, aliased, null);
    }

    private EnTask(Name alias, Table<EnTaskRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Selecao.SELECAO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.EN_TASK_FK_EN_TASK_EN_TASK, Indexes.EN_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EnTaskRecord, Long> getIdentity() {
        return Keys.IDENTITY_EN_TASK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EnTaskRecord> getPrimaryKey() {
        return Keys.KEY_EN_TASK_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EnTaskRecord>> getKeys() {
        return Arrays.<UniqueKey<EnTaskRecord>>asList(Keys.KEY_EN_TASK_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EnTaskRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EnTaskRecord, ?>>asList(Keys.FK_EN_TASK_EN_TASK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnTask as(String alias) {
        return new EnTask(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EnTask as(Name alias) {
        return new EnTask(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EnTask rename(String name) {
        return new EnTask(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EnTask rename(Name name) {
        return new EnTask(name, null);
    }
}
